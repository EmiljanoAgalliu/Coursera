import pandas as pd
import matplotlib.pyplot as plt
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline
from sklearn.preprocessing import StandardScaler, OneHotEncoder
from sklearn.model_selection import train_test_split, GridSearchCV, StratifiedKFold
from sklearn.ensemble import RandomForestClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, recall_score, classification_report, confusion_matrix, ConfusionMatrixDisplay
from sklearn.impute import SimpleImputer
import seaborn as sns
import numpy as np
import folium
from folium.plugins import MarkerCluster
from folium.plugins import MousePosition
from folium.features import DivIcon
import matplotlib as mpl
import aiohttp
import asyncio
import warnings

warnings.filterwarnings('ignore')

async def download_file(url, filepath):
    connector = aiohttp.TCPConnector(ssl=False)
    async with aiohttp.ClientSession(connector=connector) as session:
        async with session.get(url) as response:
             with open(filepath, 'wb') as file:
                file.write(await response.read())

def read_data(filepath):
    return pd.read_csv(filepath)

async def main():
    url = 'https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-DS0321EN-SkillsNetwork/datasets/spacex_launch_geo.csv'
    filepath = "spacex_launch_geo.csv"
    await download_file(url, "spacex_launch_geo.csv")

    spacex_df = read_data(filepath)
    pd.set_option('display.max_rows', None)
    pd.set_option('display.max_columns', None)
    print(spacex_df.head(10))

    # Task 1
    spacex_df = spacex_df[['Launch Site', 'Lat', 'Long', 'class']]
    launch_sites_df = spacex_df.groupby(['Launch Site'], as_index=False).first()
    launch_sites_df = launch_sites_df[['Launch Site', 'Lat', 'Long']]
    print(launch_sites_df)

    nasa_coordinate = [29.559684888503615, -95.0830971930759]
    site_map = folium.Map(location=nasa_coordinate, zoom_start=10)

    circle = folium.Circle(nasa_coordinate, radius=1000, color='#d35400', fill=True).add_child(
        folium.Popup('NASA Johnson Space Center'))
    marker = folium.map.Marker(
        nasa_coordinate,
        icon=DivIcon(
            icon_size=(20, 20),
            icon_anchor=(0, 0),
            html='<div style="font-size: 12; color:#d35400;"><b>%s</b></div>' % 'NASA JSC',
        )
    )
    site_map.add_child(circle)
    site_map.add_child(marker)

    launch_sites_data = {
        'name': ['CCAFS LC-40', 'CCAFS SLC-40', 'KSC LC-39A', 'VAFB SLC-4E'],
        'latitude': [28.562302, 28.563197, 28.573255, 34.632834],
        'longitude': [-80.577356, -80.576820, -80.646895, -120.610745],
        'radius': [1000, 1500, 1200, 1300],
    }

    launch_sites = pd.DataFrame(launch_sites_data)

    nasa_coordinate = [29.559684888503615, -95.0830971930759]
    site_map = folium.Map(location=nasa_coordinate, zoom_start=5)

    for index, site in launch_sites.iterrows():
        folium.Circle(
            location=[site['latitude'], site['longitude']],
            radius=site['radius'],
            color='#d35400',
            fill=True,
            fill_color='#ff6600',
        ).add_child(folium.Popup(site['name'])).add_to(site_map)

        folium.Marker(
            location=[site['latitude'], site['longitude']],
            icon=DivIcon(
                icon_size=(20, 20),
                icon_anchor=(0, 0),
                html='<div style="font-size: 12px; color:#d35400;"><b>{}</b></div>'.format(site['name']),
            ),
        ).add_to(site_map)

    site_map = folium.Map(location=nasa_coordinate, zoom_start=5)
    site_map.save('launch_sites_map.html')




asyncio.run(main())
